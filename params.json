{"name":"Practical Machine Learning Assignment","tagline":"Coursera","body":"---\r\ntitle: \"CourseraÂ´s PML Assignment\"\r\nauthor: \"Rnryback [GitHub](https://github.com/rnryback)\"\r\ndate: \"16th January 2015\"\r\n---\r\n\r\n##Summary\r\n\r\nUsing devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement? a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website here: http://groupware.les.inf.puc-rio.br/har (see the section on the Weight Lifting Exercise Dataset).  \r\n\r\n###Data \r\n\r\nThe training data for this project are available here: \r\n\r\nhttps://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv\r\n\r\nThe test data are available here: \r\n\r\nhttps://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv\r\n\r\nThe data for this project come from this source: http://groupware.les.inf.puc-rio.br/har. If you use the document you create for this class for any purpose please cite them as they have been very generous in allowing their data to be used for this kind of assignment. \r\n\r\nWhat you should submit\r\n\r\nThe goal of your project is to predict the manner in which they did the exercise. This is the \"classe\" variable in the training set. You may use any of the other variables to predict with. You should create a report describing how you built your model, how you used cross validation, what you think the expected out of sample error is, and why you made the choices you did. You will also use your prediction model to predict 20 different test cases. \r\n\r\nReproducibility \r\n\r\nDue to security concerns with the exchange of R code, your code will not be run during the evaluation by your classmates. Please be sure that if they download the repo, they will be able to view the compiled HTML version of your analysis. [Or use this link](https://rnryback.github.com/pml)\r\n\r\n## Data Processing  \r\n\r\n**Performed steps**:  \r\n* Get the system ready loading dependencies and the data  \r\n* Remove excel division error strings `#DIV/0!` and deal with `NA` values    \r\n\r\n```{r Dependencies and data, cache=TRUE}\r\nlibrary(Hmisc)\r\nlibrary(caret)\r\nlibrary(randomForest)\r\nlibrary(foreach)\r\nlibrary(doParallel)\r\nset.seed(1980)\r\ntraining_data <- read.csv(\"pml-training.csv\", na.strings=c(\"#DIV/0!\") )\r\nevaluation_data <- read.csv(\"pml-testing.csv\", na.strings=c(\"#DIV/0!\") )\r\n```\r\n\r\nSet columns from the eighth to the end to be numeric.  \r\n\r\n```{r Arranging columns}\r\nfor(i in c(8:ncol(training_data)-1)) {training_data[,i] = as.numeric(as.character(training_data[,i]))}\r\n\r\nfor(i in c(8:ncol(evaluation_data)-1)) {evaluation_data[,i] = as.numeric(as.character(evaluation_data[,i]))}\r\n```\r\n\r\nThere are some almost-totally blank columns in the data that do not contribute well to the prediction, so the feature dataset is made to only include complete columns.  Also removing user name, timestamps and windows.  \r\n\r\nDetermine and display out feature set.\r\n\r\n```{r Feature Set}\r\nfeature_set <- colnames(training_data[colSums(is.na(training_data)) == 0])[-(1:7)]\r\nmodel_data <- training_data[feature_set]\r\nfeature_set\r\n```\r\n\r\nThe model data is now built built from the feature set.\r\n\r\n```{r Model Dataset}\r\nidx <- createDataPartition(y=model_data$classe, p=0.75, list=FALSE )\r\ntraining <- model_data[idx,]\r\ntesting <- model_data[-idx,]\r\n```\r\n\r\nBuild 5 random forests with 150 trees each using parallel processing to build this model.\r\n\r\n```{r Building the forests, cache=TRUE}\r\nregisterDoParallel()\r\nx <- training[-ncol(training)]\r\ny <- training$classe\r\n\r\nrf <- foreach(ntree=rep(150, 6), .combine=randomForest::combine, .packages='randomForest') %dopar% {\r\nrandomForest(x, y, ntree=ntree) \r\n}\r\n```\r\n\r\nProvide error reports for both training and test data.  \r\n```{r Error reports, cache=TRUE, echo=TRUE}\r\npredictions1 <- predict(rf, newdata=training)\r\nconfusionMatrix(predictions1,training$classe)\r\n\r\n\r\npredictions2 <- predict(rf, newdata=testing)\r\nconfusionMatrix(predictions2,testing$classe)\r\n```\r\n\r\n##Conclusions and Test Data Submit\r\n\r\nThe confusion matrix shows a fairly accurate model. The test data was around 99% \r\naccurate so it was expected that most of the submitted test cases were correct. In the end all of them showed to be correct.\r\n\r\n###Use the code the instructors kindly provided to prepare the second part of the assignment\r\n\r\n```{r File submission}\r\npml_write_files = function(x){\r\n  n = length(x)\r\n  for(i in 1:n){\r\n    filename = paste0(\"problem_id_\",i,\".txt\")\r\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\r\n  }\r\n}\r\n\r\n\r\nx <- evaluation_data\r\nx <- x[feature_set[feature_set!='classe']]\r\nanswers <- predict(rf, newdata=x)\r\n\r\nanswers\r\n\r\npml_write_files(answers)\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}